@page "/fetchresources"
@using Microsoft.AspNetCore.Authorization
@using Trainor.Storage.Entities
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient Http

<h1>Hej</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (_resources== null)
{
    <p><em>Loading...</em></p>
    <p><em>@otherFailMessage</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
          @foreach (var resource in _resources)
            {
                <tr>
                    <td>@resource.id</td>
                    <td>@resource.link</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IReadOnlyCollection<ResourceDto> _resources;
    private string otherFailMessage = "";
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _resources = await Http.GetFromJsonAsync<IReadOnlyCollection<ResourceDto>>("Resource");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        catch (Exception ex){
            otherFailMessage = ex.Message;
        }
    }

}
